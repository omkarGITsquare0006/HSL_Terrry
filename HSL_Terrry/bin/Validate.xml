<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Validate</name>
    </assembly>
    <members>
        <member name="M:Bromano.Validation.Validate.IsTrue(System.Boolean)">
            <summary>
            Checks if the expression is true
            </summary>
            <param name="expression"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.IsTrue(System.Boolean,System.String,System.Object[])">
            <summary>
             Checks if the expression is true
            </summary>
            <param name="expression"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotNull(System.Object)">
            <summary>
            Checks if the object is null
            </summary>
            <param name="o"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotNull(System.Object,System.String,System.Object[])">
            <summary>
            Checks if the object is null
            </summary>
            <param name="o"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotEmpty``1(``0[])">
            <summary>
             Checks if the array is null or empty
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotEmpty``1(``0[],System.String,System.Object[])">
            <summary>
             Checks if the array is null or empty
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
             Checks if the collection is null or empty
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotEmpty``1(System.Collections.Generic.ICollection{``0},System.String,System.Object[])">
            <summary>
             Checks if the collection is null or empty
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotBlank(System.String)">
            <summary>
            Checks if string is null or empty
            </summary>
            <param name="input"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NotBlank(System.String,System.String,System.Object[])">
            <summary>
            Checks if string is null or empty
            </summary>
            <param name="input"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NoNullElements``1(``0[])">
            <summary>
            Checks if the array is null or contains null elements
            </summary>
            <param name="array"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NoNullElements``1(``0[],System.String,System.Object[])">
            <summary>
            Checks if the array is null or contains null elements
            </summary>
            <param name="array"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NoNullElements``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Checks if the array is null or contains null elements
            </summary>
            <param name="collection"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.NoNullElements``1(System.Collections.Generic.ICollection{``0},System.String,System.Object[])">
            <summary>
            Checks if the collection is null or contains null elements
            </summary>
            <param name="collection"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ValidIndex``1(``0[],System.Int32)">
            <summary>
            Checks if the array is null or the index is invalid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="index"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ValidIndex``1(``0[],System.Int32,System.String,System.Object[])">
            <summary>
            Checks if the array is null or the index is invalid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="index"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ValidIndex``1(System.Collections.Generic.ICollection{``0},System.Int32)">
            <summary>
            Checks if the collection is null or the index is invalid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="index"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ValidIndex``1(System.Collections.Generic.ICollection{``0},System.Int32,System.String,System.Object[])">
            <summary>
            Checks if the collection is null or the index is invalid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="index"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ValidState(System.Boolean)">
            <summary>
            Checks if the state is valid
            </summary>
            <param name="expression"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ValidState(System.Boolean,System.String,System.Object[])">
            <summary>
            Checks if the state is valid
            </summary>
            <param name="expression"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.MatchesPattern(System.String,System.String)">
            <summary>
            Checks if the input matches the pattern
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.MatchesPattern(System.String,System.String,System.String,System.Object[])">
            <summary>
            Checks if the input matches the pattern
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.InclusiveBetween``1(``0,``0,System.IComparable{``0})">
            <summary>
            Checks if the input is between or equal to the bounds
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="value"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.InclusiveBetween``1(``0,``0,System.IComparable{``0},System.String,System.Object[])">
            <summary>
            Checks if the input is between or equal to the bounds
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="value"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ExclusiveBetween``1(``0,``0,System.IComparable{``0})">
            <summary>
            Checks if the input is between the bounds
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="value"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.ExclusiveBetween``1(``0,``0,System.IComparable{``0},System.String,System.Object[])">
            <summary>
            Checks if the input is between the bounds
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="value"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.IsInstanceOf(System.Type,System.Object)">
            <summary>
            Checks if the object is an instance of the type
            </summary>
            <param name="type"></param>
            <param name="o"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.IsInstanceOf(System.Type,System.Object,System.String,System.Object[])">
            <summary>
            Checks if the object is an instance of the type 
            </summary>
            <param name="type"></param>
            <param name="o"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.IsAssignableFrom(System.Type,System.Type)">
            <summary>
            Checks if the supertype is assignable from the type
            </summary>
            <param name="superType"></param>
            <param name="type"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bromano.Validation.Validate.IsAssignableFrom(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            Checks if the supertype is assignable from the type
            </summary>
            <param name="superType"></param>
            <param name="type"></param>
            <param name="message"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
    </members>
</doc>
